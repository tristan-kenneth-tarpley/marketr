'use strict';

exports.__esModule = true;

var _tags;

exports.createToken = createToken;
exports.createRawToken = createRawToken;

var _tokenize = require('./tokenize.js');

var _tokenize2 = _interopRequireDefault(_tokenize);

var _token_type = require('./token_type.js');

var _token_type2 = _interopRequireDefault(_token_type);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var baseTokenizeInstance = new _tokenize2.default('');
/**
 * create token
 */
function createToken(type, value, referToken) {
  var token = baseTokenizeInstance.getToken(type, value);
  token.start = referToken ? referToken.start : 0;
  token.end = token.start + value.length;
  return token;
}

/**
 * create raw token, such as: style or script
 */
var types = {
  style: _token_type2.default.HTML_TAG_STYLE,
  script: _token_type2.default.HTML_TAG_SCRIPT
};
var tags = (_tags = {}, _tags[_token_type2.default.HTML_TAG_STYLE] = 'style', _tags[_token_type2.default.HTML_TAG_SCRIPT] = 'script', _tags);
function createRawToken(type, value, referToken) {
  type = types[type] || type;
  var tokens = void 0;
  if (Array.isArray(value)) {
    tokens = value;
    value = '';
  }
  var token = createToken(type, value, referToken);
  var tagName = tags[type];
  var startToken = createToken(_token_type2.default.HTML_TAG_STYLE, '<' + tagName + '>' + value + '</' + tagName + '>', referToken);
  startToken.ext = {
    attrs: [],
    tag: tagName,
    tagLowerCase: tagName
  };
  var contentToken = createToken(_token_type2.default.HTML_RAW_TEXT, value, startToken);
  contentToken.ext = {
    tokens: tokens
  };
  var endToken = createToken(_token_type2.default.HTML_TAG_END, '</' + tagName + '>', contentToken);
  endToken.ext = {
    tag: tagName,
    tagLowerCase: tagName
  };
  token.ext = {
    start: startToken,
    content: contentToken,
    end: endToken
  };
  return token;
}
//# sourceMappingURL=util_ext.js.map