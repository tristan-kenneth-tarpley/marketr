{"version":3,"sources":["../../../src/lang/html/util.js"],"names":["isTagFirstChar","isTagNameChar","parseScriptAttrs","parseStyleAttrs","attrs2Text","token2Text","isTagAttrDefaultValue","isTagAttrOnlyName","isAttrValueNoQuote","isOptionalEndTag","isVoidElement","isTag","isSafeTag","code","token","jsTplTypes","isScript","isExternal","type","attrs","ext","i","item","name","value","toLowerCase","isTpl","indexOf","isStyle","map","attr","TPL","spaceBefore","quote","join","trim","startToken2Text","attrText","slash","tag","tokens","stringify","css","js","prevToken","result","forEach","push","commentBefore","length","contentToken","HTML_TAG_START","HTML_TAG_STYLE","start","content","end","HTML_TAG_SCRIPT","startToken","HTML_TAG_END","lowerValue","key","attrName","test","list","Array","isArray"],"mappings":"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","file":"util.js","sourcesContent":["import TokenType from '../../util/token_type.js';\nimport {hasSpaceBetweenTokens} from '../../util/util.js';\nimport {\n  tagAttrDefaultValue,\n  tagAttrOnlyName,\n  optionalEndTag,\n  voidElements,\n  safeTags,\n  allTags\n} from './config.js';\n\n/**\n * check code is tag name first char\n * @param  {Number}  code [char code]\n * @return {Boolean}      []\n */\nexport function isTagFirstChar(code) {\n  // a-z ! ? /\n  return code >= 0x61 && code <= 0x7a || code === 0x3f || code === 0x21 || code === 0x2f;\n}\n/**\n * check code is tag name char\n * @param  {Number}  code [char code]\n * @return {Boolean}      []\n */\nexport function isTagNameChar(code) {\n  // a-z 0-9 : -\n  return code >= 0x61 && code <= 0x7a || code === 0x3a || code === 0x2d || code >= 0x30 && code <= 0x39;\n}\n/**\n * parse script token attribute\n * @param  {Object} token []\n * @return {Object}             []\n */\nexport function parseScriptAttrs(token, jsTplTypes = []) {\n  let isScript = false, isExternal = false, type = '';\n  let attrs = token.ext.attrs || [], i = 0, item;\n  for (; item = attrs[i++];) {\n    switch (item.name) {\n      case 'src':\n        isExternal = true;\n        break;\n      case 'type':\n        type = (item.value || '').toLowerCase();\n        break;\n    }\n  }\n  if (!type || type === 'text/javascript') {\n    isScript = true;\n  }\n  token.ext.isScript = isScript;\n  token.ext.isExternal = isExternal;\n  token.ext.type = type;\n  token.ext.isTpl = !isScript && jsTplTypes && jsTplTypes.indexOf(type) > -1;\n  return token;\n}\n/**\n * parse style attr\n * @param  {Object} token []\n * @return {Object}       []\n */\nexport function parseStyleAttrs(token) {\n  var isStyle = true, attrs = token.attrs || [], i = 0, item, value;\n  for (; item = attrs[i++];) {\n    if (item.name === 'type') {\n      value = (item.value || '').toLowerCase();\n      if (value && value !== 'text/css') {\n        isStyle = false;\n      }\n      break;\n    }\n  }\n  token.ext.isStyle = isStyle;\n  return token;\n}\n\n/**\n * tag attrs to text\n */\nexport function attrs2Text(attrs = []) {\n  return attrs.map(attr => {\n    // is tpl\n    if (attr.type === TokenType.TPL) {\n      return (attr.spaceBefore ? ' ' : '') + attr.value;\n    }\n    const quote = attr.quote || '';\n    if ('value' in attr && 'name' in attr) {\n      return attr.name + '=' + quote + attr.value + quote + ' ';\n    }\n    if ('value' in attr) {\n      return attr.value + ' ';\n    }\n    return attr.name + ' ';\n  }).join('').trim();\n}\n\n/**\n * start token to text\n */\nconst startToken2Text = token => {\n  let attrText = attrs2Text(token.ext.attrs);\n  if (attrText) {\n    attrText = ' ' + attrText;\n  }\n  // slash on single tag\n  if (token.ext.slash) {\n    attrText += ' /';\n  }\n  return `<${token.ext.tag}${attrText}>`;\n};\n\n/**\n * tokens to text\n */\nexport function token2Text(tokens = [], stringify = {\n  css: null,\n  js: null\n}) {\n  let prevToken = null;\n  const result = [];\n\n  tokens.forEach(token => {\n    // has space between tokens\n    if (hasSpaceBetweenTokens(prevToken, token)) {\n      result.push(' ');\n    }\n    // has comment\n    if (token.commentBefore.length) {\n      token.commentBefore.forEach(item => {\n        result.push(item.value);\n      });\n    }\n    let contentToken;\n    switch (token.type) {\n      case TokenType.HTML_TAG_START:\n        result.push(startToken2Text(token));\n        break;\n      case TokenType.HTML_TAG_STYLE:\n        const start = startToken2Text(token.ext.start);\n        result.push(start);\n        contentToken = token.ext.content;\n        if (!stringify.css || !contentToken.ext.tokens) {\n          result.push(contentToken.value);\n        } else {\n          result.push(stringify.css(contentToken.ext.tokens));\n        }\n        result.push(token.ext.end.value);\n        break;\n      case TokenType.HTML_TAG_SCRIPT:\n        const startToken = token.ext.start;\n        result.push(startToken2Text(startToken));\n        contentToken = token.ext.content;\n        if (contentToken.ext.tokens) {\n          if (startToken.ext.isScript) {\n            result.push(stringify.js(contentToken.ext.tokens));\n          } else if (startToken.ext.isTpl) {\n            result.push(token2Text(contentToken.ext.tokens));\n          }\n        } else {\n          result.push(contentToken.value);\n        }\n        result.push(token.ext.end.value);\n        break;\n      case TokenType.HTML_TAG_END:\n        result.push(`</${token.ext.tag}>`);\n        break;\n      default:\n        result.push(token.value);\n        break;\n    }\n    prevToken = token;\n  });\n  return result.join('');\n}\n\n/**\n * is tag attribute default value\n */\nexport function isTagAttrDefaultValue(name, value, tag) {\n  const lowerValue = (value || '').toLowerCase();\n  for (const key in tagAttrDefaultValue) {\n    const attrs = tagAttrDefaultValue[key];\n    if (key === '*' || key === tag) {\n      for (const attrName in attrs) {\n        if (attrName === name && lowerValue === attrs[attrName]) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * tag attribute only has name\n */\nexport function isTagAttrOnlyName(attr) {\n  return !!tagAttrOnlyName[attr];\n}\n/**\n * attribute value no quote\n */\nexport function isAttrValueNoQuote(value) {\n  return /^\\w+$/.test(value);\n}\n\n/**\n * check is optional end tag\n */\nexport function isOptionalEndTag(tag, list) {\n  list = list || optionalEndTag;\n  if (Array.isArray(list)) {\n    return list.indexOf(tag) > -1;\n  }\n  return !!list[tag];\n}\n\n/**\n * check is void element\n */\nexport function isVoidElement(tag) {\n  return !!voidElements[tag];\n}\n/**\n * is standard tag\n */\nexport function isTag(tag) {\n  return !!allTags[tag];\n}\n\n/**\n * is safe tag\n */\nexport function isSafeTag(tag) {\n  return !!safeTags[tag];\n}\n"]}