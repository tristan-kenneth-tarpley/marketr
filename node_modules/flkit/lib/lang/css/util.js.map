{"version":3,"sources":["../../../src/lang/css/util.js"],"names":["isAttrChar","calculateSelectorSpecificity","isPseudoElement","selectorGroupToken2Text","selectorToken2Text","token2Text","short4NumValue","rgb2Hex","getShortValue","isMultiSameProperty","mergeProperties","isAtType","isUnMergeProperty","isUnSortProperty","mergePropertyChildren","code","tokens","i","length","token","specificity","instance","type","CSS_SELECTOR_ID","CSS_SELECTOR_TYPE","CSS_SELECTOR_PSEUDO_ELEMENT","CSS_SELECTOR_CLASS","CSS_SELECTOR_ATTRIBUTE","CSS_SELECTOR_PSEUDO_CLASS","test","value","slice","run","group","isHackChar","selectorBreakChar","el","indexOf","selectorGroupToken","map","index","hasSpace","join","ext","item","delimiters","prev","prefix","commentBefore","CSS_SELECTOR","CSS_PROPERTY","suffix","CSS_VALUE","important","combineChars","append","returnArray","Array","isArray","split","v","sv","splice","trim","r","g","b","result","forEach","toString","rgbRex","replace","a","property","toLowerCase","list","color","attrs1","attrs2","key","some","attrs","properties","TPL","CSS_BRACK_HACK","propertyValue","attrsKeys","mainIndex","idx","flag","every","propertyToken","shortValue","valueToken"],"mappings":"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","file":"util.js","sourcesContent":["import TokenType from '../../util/token_type.js';\nimport SelectorTokenize from './selector_tokenize.js';\n\nimport {\n  makePredicate,\n  hasSpaceBetweenTokens\n} from '../../util/util.js';\n\nimport {createToken} from '../../util/util_ext.js';\n\nimport {\n  propertyHackPrefix,\n  selectorCharUntil,\n  pseudosElements21,\n  shortColor,\n  shortFontWeight,\n  multiSameProperty,\n  atTypes,\n  unMergeProperties,\n  unSortProperties,\n  propertyChildren\n} from './config.js';\n\n/**\n * is attribute char\n * @return {Boolean} [description]\n */\nexport function isAttrChar(code) {\n  // >= a && <= z or -\n  return code >= 0x61 && code <= 0x7a || code === 0x2d;\n}\n\n/**\n * Calculating a selector's specificity\n * @param  {Array} tokens [selector tokens]\n * @return {Number}        []\n */\nexport function calculateSelectorSpecificity(tokens) {\n  let i = 0, length = tokens.length, token, specificity = 0, instance;\n  for (; i < length; i++) {\n    token = tokens[i];\n    switch (token.type) {\n      case TokenType.CSS_SELECTOR_ID:\n        specificity += 100;\n        break;\n      case TokenType.CSS_SELECTOR_TYPE:\n      case TokenType.CSS_SELECTOR_PSEUDO_ELEMENT:\n        specificity += 1;\n        break;\n      case TokenType.CSS_SELECTOR_CLASS:\n      case TokenType.CSS_SELECTOR_ATTRIBUTE:\n        specificity += 10;\n        break;\n      case TokenType.CSS_SELECTOR_PSEUDO_CLASS:\n        if (/^:not\\(/i.test(token.value)) {\n          instance = new SelectorTokenize(token.value.slice(5, -1));\n          specificity += instance.run().group[0].specificity;\n        } else {\n          specificity += 10;\n        }\n        break;\n    }\n  }\n  return specificity;\n}\n/**\n * is hack char\n */\nexport const isHackChar = makePredicate(propertyHackPrefix);\n/**\n * selector char util\n */\nexport const selectorBreakChar = makePredicate(selectorCharUntil);\n/**\n * is pseudo elements\n */\nexport function isPseudoElement(el) {\n  return pseudosElements21.indexOf(el) > -1;\n}\n/**\n * selector group token to text\n */\nexport function selectorGroupToken2Text(selectorGroupToken) {\n  return selectorGroupToken.tokens.map((token, index) => {\n    let hasSpace = false;\n    if (index > 0) {\n      hasSpace = hasSpaceBetweenTokens(selectorGroupToken.tokens[index - 1], token);\n    }\n    return (hasSpace ? ' ' : '') + token.value;\n  }).join('');\n}\n/**\n * selector token to text\n */\nexport function selectorToken2Text(token) {\n  return token.ext.group.map(item => {\n    return selectorGroupToken2Text(item);\n  }).join(',');\n}\n/**\n * tokens to text\n */\nexport function token2Text(tokens, delimiters = []) {\n  let prev = '';\n  return tokens.map((token, index) => {\n    const prefix = token.commentBefore.map(item => item.value).join('');\n    let value = '';\n    switch (token.type) {\n      case TokenType.CSS_SELECTOR:\n        value = selectorToken2Text(token);\n        break;\n      case TokenType.CSS_PROPERTY:\n        value = token.ext.prefix + token.ext.value + token.ext.suffix;\n        break;\n      case TokenType.CSS_VALUE:\n        value = token.ext.prefix + token.ext.value + token.ext.suffix;\n        if (token.ext.important) {\n          value += '!important';\n        }\n        break;\n      default:\n        value = token.value;\n        break;\n    }\n    if (!prefix && index > 0) {\n      const combineChars = prev[prev.length - 1] + value[0];\n      if (delimiters.indexOf(combineChars) > -1) {\n        value = ' ' + value;\n      }\n    }\n    prev = prefix + value;\n    return prev;\n  }).join('');\n}\n\n/**\n * short for num value\n * margin: 10px 20px 10px 20px;\n */\nexport function short4NumValue(value, append = {}, returnArray = false) {\n  if (!Array.isArray(value)) {\n    value = value.split(/ +/);\n  }\n  const length = value.length;\n  const v = [\n    [],\n    [0, 0, 0, 0],\n    [0, 1, 0, 1],\n    [0, 1, 2, 1],\n    [0, 1, 2, 3]\n  ];\n  const sv = v[length];\n  value = [\n    value[sv[0]],\n    value[sv[1]],\n    value[sv[2]],\n    value[sv[3]]\n  ];\n  for (const index in append) {\n    value[index | 0] = append[index];\n  }\n  if (value[1] === value[3]) {\n    value.splice(3, 1);\n  }\n  if (value.length === 3 && value[0] === value[2]) {\n    value.splice(2, 1);\n  }\n  if (value.length === 2 && value[0] === value[1]) {\n    value.splice(1, 1);\n  }\n  if (returnArray) {\n    return value;\n  }\n  return value.join(' ').trim();\n}\n/**\n * rgb to hex\n */\nexport function rgb2Hex(value, r, g, b) {\n  if (value === true) {\n    const v = [r | 0, g | 0, b | 0];\n    let result = '#';\n    v.forEach(item => {\n      result += (item < 16 ? '0' : '') + item.toString(16);\n    });\n    return result;\n  }\n  if (value.indexOf('rgb') === -1) {\n    return value;\n  }\n  const rgbRex = /rgb\\s*\\(\\s*(\\d+)\\s*\\,\\s*(\\d+)\\s*\\,\\s*(\\d+)\\s*\\)/g;\n  value = value.replace(rgbRex, (a, r, g, b) => {\n    return rgb2Hex(true, r, g, b);\n  });\n  return value;\n}\n/**\n * get short value\n */\nexport function getShortValue(value, property) {\n  // http://www.w3schools.com/cssref/pr_border-width.asp\n  property = property.toLowerCase();\n  if (property === 'border-color' || property === 'border-style' || property === 'border-width') {\n    if (value.indexOf('(') === -1) {\n      return short4NumValue(value);\n    }\n  }\n  const list = {\n    color: shortColor,\n    'border-top-color': shortColor,\n    'border-left-color': shortColor,\n    'border-right-color': shortColor,\n    'border-bottom-color': shortColor,\n    'background-color': shortColor,\n    'font-weight': shortFontWeight\n  };\n  // rgb(0,0,0) -> #000000 (or #000 in this case later)\n  value = rgb2Hex(value);\n  if (property in list) {\n    return list[property][value] || value;\n  }\n  return value;\n}\n\n/**\n * is multi same property\n */\nexport function isMultiSameProperty(property, value) {\n  if (value.indexOf('calc') > -1) {\n    return true;\n  }\n  return !!multiSameProperty[property];\n}\n/**\n * merge properties\n */\nexport function mergeProperties(attrs1, attrs2) {\n  for (const key in attrs2) {\n    if (attrs1[key]) {\n      if (!attrs1[key].value.ext.important || attrs2[key].value.ext.important) {\n        delete attrs1[key];\n        attrs1[key] = attrs2[key];\n      }\n    } else {\n      attrs1[key] = attrs2[key];\n    }\n  }\n  return attrs1;\n}\n/**\n * is @ type\n */\nexport function isAtType(type) {\n  return !!atTypes[type];\n}\n/**\n * can not merged property\n */\nexport function isUnMergeProperty(property, value) {\n  const v = unMergeProperties[property.toLowerCase()];\n  if (!v) {\n    return false;\n  }\n  if (typeof v === 'boolean') {\n    return v;\n  }\n  return v.test(value);\n}\n/**\n * is unsort property\n */\nexport function isUnSortProperty(property) {\n  return unSortProperties.some(item => {\n    return item === property || property.indexOf(item + '-') > -1;\n  });\n}\n\n/**\n * combine property\n *\n *  a{padding: 10px; padding-left: 20px;} => a{padding: 20px 10px 10px 10px}\n */\nexport function mergePropertyChildren(attrs, type = 'padding') {\n  const list = propertyChildren[type];\n  const properties = {[type]: 0};\n  list.forEach(item => properties[item] = 0);\n\n  for (const key in attrs) {\n    const {property, value} = attrs[key];\n    // if has tpl or hack in attrs, can not combine it\n    if (!property ||\n        property.type === TokenType.TPL ||\n        value.type === TokenType.TPL ||\n        value.type === TokenType.CSS_BRACK_HACK) {\n      return attrs;\n    }\n    const propertyValue = property.value.toLowerCase();\n    if(propertyValue !== key) return attrs;\n    if (propertyValue in properties) {\n      if (property.ext.prefix ||\n         value.ext.suffix ||\n         value.ext.important ||\n         value.ext.prefix) {\n        return attrs;\n      } else {\n        properties[propertyValue] = 1;\n      }\n    }\n  }\n  if (properties[type]) {\n    /**\n     * 避免出现这种情况\n     *\n    .manage-content {\n        padding-top: 20px;\n        background: #fff;\n        padding: 0 26px 20px;\n    }\n    */\n    const attrsKeys = Object.keys(attrs);\n    const mainIndex = attrsKeys.indexOf(type);\n    const append = {};\n    const value = attrs[type].value.ext.value;\n    list.forEach((item, index) => {\n      if (properties[item]) {\n        const idx = attrsKeys.indexOf(item);\n        if (idx > mainIndex) {\n          append[index] = attrs[item].value.value;\n        }\n        delete attrs[item];\n      }\n    });\n    attrs[type].value.ext.value = short4NumValue(value, append);\n    attrs[type].value.value = attrs[type].value.ext.value;\n  } else {\n    const flag = list.every(item => {\n      return properties[item];\n    });\n    if (!flag) {\n      return attrs;\n    }\n    const value = [];\n    list.forEach((item, index) => {\n      value[index] = attrs[item].value.ext.value;\n      delete attrs[item];\n    });\n    const propertyToken = createToken(TokenType.CSS_PROPERTY, type);\n    propertyToken.ext = {\n      prefix: '',\n      value: type,\n      suffix: ''\n    };\n    const shortValue = short4NumValue(value);\n    const valueToken = createToken(TokenType.CSS_VALUE, shortValue);\n    valueToken.ext = {\n      prefix: '',\n      value: shortValue,\n      suffix: '',\n      important: false\n    };\n    attrs[type] = {\n      property: propertyToken,\n      value: valueToken\n    };\n  }\n  return attrs;\n}\n"]}