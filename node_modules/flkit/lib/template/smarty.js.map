{"version":3,"sources":["../../src/template/smarty.js"],"names":["SmartyTemplate","hasOutput","token","code","value","trim","charCodeAt","getMatched","ld","rd","tokenizeInstance","_getMatched","nest","compress","ext"],"mappings":";;;;;;;;;;;;;;;;AACA;;;;;;IAEqBA,c;;;;;;;;AACnB;;;2BAGAC,S,sBAAUC,K,EAAO;AACf,QAAMC,OAAOD,MAAME,KAAN,CAAYC,IAAZ,GAAmBC,UAAnB,CAA8B,CAA9B,CAAb;AACA,WAAOH,SAAS,IAAhB,CAFe,CAEO;AACvB,G;AACD;;;;;2BAGAI,U,uBAAWC,E,EAAIC,E,EAAIC,gB,EAAkB;AACnC,WAAO,KAAKC,WAAL,CAAiBH,EAAjB,EAAqBC,EAArB,EAAyBC,gBAAzB,EAA2C;AAChDE,YAAM;AAD0C,KAA3C,CAAP;AAGD,G;AACD;;;;;2BAGAC,Q,qBAASX,K,EAAO;AACd,QAAME,QAAQF,MAAMY,GAAN,CAAUV,KAAxB;AACA;AACA,QAAIA,MAAM,CAAN,MAAa,GAAjB,EAAsB;AACpB;AACD;AACD,WAAOF,KAAP;AACD,G;;;;;kBA1BkBF,c","file":"smarty.js","sourcesContent":["\nimport Base from './base.js';\n\nexport default class SmartyTemplate extends Base {\n  /**\n   * check token has output\n   */\n  hasOutput(token) {\n    const code = token.value.trim().charCodeAt(0);\n    return code === 0x24; // $\n  }\n  /**\n   * get template matched\n   */\n  getMatched(ld, rd, tokenizeInstance) {\n    return this._getMatched(ld, rd, tokenizeInstance, {\n      nest: true\n    });\n  }\n  /**\n   * compress tpl token\n   */\n  compress(token) {\n    const value = token.ext.value;\n    // remove {=*$name*=}\n    if (value[0] === '*') {\n      return;\n    }\n    return token;\n  }\n}\n"]}