{"version":3,"sources":["../src/index.js"],"names":["hasTpl","getHtmlAttrValue","setHtmlAttrValue","TokenType","Template","CssTokenize","CssSelectorTokenize","cssToken2Text","CssCompress","HtmlTokenize","htmlToken2Text","HtmlCompress","createToken","createRawToken","text","options","instance","attrs","name","value","some","item","nameLowerCase","flag","push","quote"],"mappings":";;;;QAiCgBA,M,GAAAA,M;QAQAC,gB,GAAAA,gB;QAaAC,gB,GAAAA,gB;;AAtDhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAFA;AAOO,IAAMC,oDAAN;AACA,IAAMC,4CAAN;;AAEA,IAAMC,sDAAN;AACA,IAAMC,+EAAN;AACA,IAAMC,yDAAN;AACA,IAAMC,sDAAN;;AAEA,IAAMC,wDAAN;AACA,IAAMC,0DAAN;AACA,IAAMC,wDAAN;;AAEA,IAAMC,yDAAN;AACA,IAAMC,kEAAN;;AAEP;;;AAGO,SAASb,MAAT,CAAgBc,IAAhB,EAAoC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACzC,MAAMC,WAAW,mBAAiBF,IAAjB,EAAuBC,OAAvB,CAAjB;AACA,SAAOC,SAAShB,MAAT,EAAP;AACD;;AAED;;;AAGO,SAASC,gBAAT,CAA0BgB,KAA1B,EAAiCC,IAAjC,EAAuC;AAC5C,MAAIC,cAAJ;AACAF,QAAMG,IAAN,CAAW,gBAAQ;AACjB,QAAIC,KAAKC,aAAL,KAAuBJ,IAA3B,EAAiC;AAC/BC,cAAQE,KAAKF,KAAb;AACA,aAAO,IAAP;AACD;AACF,GALD;AAMA,SAAOA,KAAP;AACD;AACD;;;AAGO,SAASjB,gBAAT,CAA0Be,KAA1B,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8C;AACnD,MAAMI,OAAON,MAAMG,IAAN,CAAW,gBAAQ;AAC9B,QAAIC,KAAKC,aAAL,KAAuBJ,IAA3B,EAAiC;AAC/BG,WAAKF,KAAL,GAAaA,KAAb;AACA,aAAO,IAAP;AACD;AACF,GALY,CAAb;AAMA,MAAI,CAACI,IAAL,EAAW;AACTN,UAAMO,IAAN,CAAW;AACTN,gBADS;AAETC,kBAFS;AAGTM,aAAO,GAHE;AAITH,qBAAeJ;AAJN,KAAX;AAMD;AACD,SAAOD,KAAP;AACD","file":"index.js","sourcesContent":["import token_type from './util/token_type.js';\nimport BaseTemplate from './template/base.js';\nimport css_tokenize from './lang/css/tokenize.js';\nimport css_selector_tokenize from './lang/css/selector_tokenize.js';\nimport html_tokenize from './lang/html/tokenize.js';\nimport {token2Text as html_token_2_text} from './lang/html/util.js';\nimport {token2Text as css_token_2_text} from './lang/css/util.js';\nimport html_compress from './lang/html/compress.js';\n// import BaseTokenize from './util/tokenize.js';\nimport css_compress from './lang/css/compress.js';\nimport {\n  createToken as create_token,\n  createRawToken as create_raw_token\n} from './util/util_ext.js';\n\nexport const TokenType = token_type;\nexport const Template = BaseTemplate;\n\nexport const CssTokenize = css_tokenize;\nexport const CssSelectorTokenize = css_selector_tokenize;\nexport const cssToken2Text = css_token_2_text;\nexport const CssCompress = css_compress;\n\nexport const HtmlTokenize = html_tokenize;\nexport const htmlToken2Text = html_token_2_text;\nexport const HtmlCompress = html_compress;\n\nexport const createToken = create_token;\nexport const createRawToken = create_raw_token;\n\n/**\n * has template syntax in text\n */\nexport function hasTpl(text, options = {}) {\n  const instance = new BaseTemplate(text, options);\n  return instance.hasTpl();\n}\n\n/**\n * get html attribute value\n */\nexport function getHtmlAttrValue(attrs, name) {\n  let value;\n  attrs.some(item => {\n    if (item.nameLowerCase === name) {\n      value = item.value;\n      return true;\n    }\n  });\n  return value;\n}\n/**\n * set html attribute value\n */\nexport function setHtmlAttrValue(attrs, name, value) {\n  const flag = attrs.some(item => {\n    if (item.nameLowerCase === name) {\n      item.value = value;\n      return true;\n    }\n  });\n  if (!flag) {\n    attrs.push({\n      name,\n      value,\n      quote: '\"',\n      nameLowerCase: name\n    });\n  }\n  return attrs;\n}\n"]}